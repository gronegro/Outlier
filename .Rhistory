install.packages("ddplyr")
install.packages("ddplyr")
install.packages("dplyr")
library(dplyr)
library(plyr)
library(dplyr)
library(rjson)
library(jsonlite)
library(pracma)
library(scales)
library(mongolite)
# <<<<<<< HEAD
# setwd("/home/juang/Documents/outlier-backend")
# =======
# setwd("/home/juandaserni/Documents/OutLierHunter/outlier-backend")
# >>>>>>> 4c84f17d3f4d05e0677e4400966f504099980a45
source("Relevance.R")
source("WBIFS.R")
source("SuperStocks.R")
source("FinancialShenanigans.R")
source("WBSP.R")
source("dfClean.R")
source("Network.R")
# Indices:  Split Quaterly-Anual /// Get Ticker index /// TTM Index
Qindex      <- function(df){which(grepl("Q", colnames(df)))}
IndexTicker <- function(df){which(colnames(df)=="Ticker")}
TTMindex    <- function(df){which(grepl("TTM", colnames(df)))}
# Markets
files <- list.files(path="Data/", pattern="*.csv", full.names=T, recursive=FALSE)
Countries <- lapply(files, function(x) {read.csv(file=x, header=TRUE, sep=",", encoding="UTF-8",na.strings=c("","nan"))})
names(Countries) <- gsub(files, pattern = paste(c(".csv","Data//"), collapse = "|"), replacement = "")
Markets          <- lapply(Countries, function(x) x[,-c(Qindex(x), TTMindex(x))])
MarketsQuaterly  <- lapply(Countries, function(x) x[,c(1, IndexTicker(x), Qindex(x))])
MarketsTTM       <- lapply(Countries, function(x) x[,c(1, IndexTicker(x), TTMindex(x))])
# Markets (clean)
CutYear <- "13"
MarketsClean         <- lapply(Markets, dfCleanAnually)
MarketsClean         <-  lapply(MarketsClean, function(x) x[,1:which(colnames(x)==CutYear)])
MarketsCleanQuaterly <- lapply(MarketsQuaterly, dfCleanQuaterly)
MarketsCleanTTM      <- lapply(MarketsTTM, dfCleanTTM)
# Quantiles (selected stocks)
qupper <- 0.95
qlower <- 1 - qupper
# Count length of Data (Number of Years)
MarketRelevance <- lapply(MarketsClean, function(x) Relevance(x,unique(x$Ticker)))
# Warren Buffet and the interpretation of financial statements
MarketWBIFS            <- lapply(MarketsClean, function(x) WBIFS(x,unique(x$Ticker)))
MarketWBIFS            <- mapply(function(x, y) left_join(x, y, by = "Ticker", all = T), x = MarketWBIFS, y = MarketRelevance, SIMPLIFY = F)
MarketWBIFS            <- lapply(MarketWBIFS, RankbyRelevance)
QuantileUpperWBIFS     <- lapply(MarketWBIFS, function(x) x[which(x$RankbyRelevance > quantile(x$RankbyRelevance, probs=qupper)),c(1,length(x))])
QuantileLowerWBIFS     <- lapply(MarketWBIFS, function(x) x[which(x$RankbyRelevance < quantile(x$RankbyRelevance, probs=qlower)),c(1,length(x))])
QuantileWBIFS          <- mapply(rbind, QuantileUpperWBIFS, QuantileLowerWBIFS, SIMPLIFY=FALSE)
library(plyr)
library(dplyr)
library(rjson)
library(jsonlite)
library(pracma)
library(scales)
library(mongolite)
# <<<<<<< HEAD
# setwd("/home/juang/Documents/outlier-backend")
# =======
# setwd("/home/juandaserni/Documents/OutLierHunter/outlier-backend")
# >>>>>>> 4c84f17d3f4d05e0677e4400966f504099980a45
source("Relevance.R")
source("WBIFS.R")
source("SuperStocks.R")
source("FinancialShenanigans.R")
source("WBSP.R")
source("dfClean.R")
source("Network.R")
# Indices:  Split Quaterly-Anual /// Get Ticker index /// TTM Index
Qindex      <- function(df){which(grepl("Q", colnames(df)))}
IndexTicker <- function(df){which(colnames(df)=="Ticker")}
TTMindex    <- function(df){which(grepl("TTM", colnames(df)))}
# Markets
files <- list.files(path="Data/", pattern="*.csv", full.names=T, recursive=FALSE)
Countries <- lapply(files, function(x) {read.csv(file=x, header=TRUE, sep=",", encoding="UTF-8",na.strings=c("","nan"))})
names(Countries) <- gsub(files, pattern = paste(c(".csv","Data//"), collapse = "|"), replacement = "")
Markets          <- lapply(Countries, function(x) x[,-c(Qindex(x), TTMindex(x))])
MarketsQuaterly  <- lapply(Countries, function(x) x[,c(1, IndexTicker(x), Qindex(x))])
MarketsTTM       <- lapply(Countries, function(x) x[,c(1, IndexTicker(x), TTMindex(x))])
# Markets (clean)
CutYear <- "13"
MarketsClean         <- lapply(Markets, dfCleanAnually)
MarketsClean         <-  lapply(MarketsClean, function(x) x[,1:which(colnames(x)==CutYear)])
MarketsCleanQuaterly <- lapply(MarketsQuaterly, dfCleanQuaterly)
MarketsCleanTTM      <- lapply(MarketsTTM, dfCleanTTM)
# Quantiles (selected stocks)
qupper <- 0.95
qlower <- 1 - qupper
# Count length of Data (Number of Years)
MarketRelevance <- lapply(MarketsClean, function(x) Relevance(x,unique(x$Ticker)))
# Warren Buffet and the interpretation of financial statements
MarketWBIFS            <- lapply(MarketsClean, function(x) WBIFS(x,unique(x$Ticker)))
MarketWBIFS            <- mapply(function(x, y) left_join(x, y, by = "Ticker", all = T), x = MarketWBIFS, y = MarketRelevance, SIMPLIFY = F)
MarketWBIFS            <- lapply(MarketWBIFS, RankbyRelevance)
QuantileUpperWBIFS     <- lapply(MarketWBIFS, function(x) x[which(x$RankbyRelevance > quantile(x$RankbyRelevance, probs=qupper)),c(1,length(x))])
QuantileLowerWBIFS     <- lapply(MarketWBIFS, function(x) x[which(x$RankbyRelevance < quantile(x$RankbyRelevance, probs=qlower)),c(1,length(x))])
QuantileWBIFS          <- mapply(rbind, QuantileUpperWBIFS, QuantileLowerWBIFS, SIMPLIFY=FALSE)
library(plyr)
library(dplyr)
library(rjson)
library(jsonlite)
library(pracma)
library(scales)
library(mongolite)
# <<<<<<< HEAD
# setwd("/home/juang/Documents/outlier-backend")
# =======
# setwd("/home/juandaserni/Documents/OutLierHunter/outlier-backend")
# >>>>>>> 4c84f17d3f4d05e0677e4400966f504099980a45
source("Relevance.R")
source("WBIFS.R")
source("SuperStocks.R")
source("FinancialShenanigans.R")
source("WBSP.R")
source("dfClean.R")
source("Network.R")
library(plyr)
library(dplyr)
library(rjson)
library(jsonlite)
library(pracma)
library(scales)
library(mongolite)
source("Relevance.R")
source("WBIFS.R")
source("SuperStocks.R")
source("FinancialShenanigans.R")
source("WBSP.R")
source("dfClean.R")
source("Network.R")
library(plyr)
library(dplyr)
library(rjson)
library(jsonlite)
library(pracma)
library(scales)
library(mongolite)
setwd("/home/juang/Documents/outlier-backend.R")
source("Relevance.R")
source("WBIFS.R")
source("SuperStocks.R")
source("FinancialShenanigans.R")
source("WBSP.R")
source("dfClean.R")
source("Network.R")
library(plyr)
library(dplyr)
library(rjson)
library(jsonlite)
library(pracma)
library(scales)
library(mongolite)
setwd("/home/juang/Documents/outlier-backend")
# =======
# setwd("/home/juandaserni/Documents/OutLierHunter/outlier-backend")
# >>>>>>> 4c84f17d3f4d05e0677e4400966f504099980a45
source("Relevance.R")
source("WBIFS.R")
source("SuperStocks.R")
source("FinancialShenanigans.R")
source("WBSP.R")
source("dfClean.R")
source("Network.R")
Qindex      <- function(df){which(grepl("Q", colnames(df)))}
IndexTicker <- function(df){which(colnames(df)=="Ticker")}
TTMindex    <- function(df){which(grepl("TTM", colnames(df)))}
# Markets
files <- list.files(path="Data/", pattern="*.csv", full.names=T, recursive=FALSE)
Countries <- lapply(files, function(x) {read.csv(file=x, header=TRUE, sep=",", encoding="UTF-8",na.strings=c("","nan"))})
names(Countries) <- gsub(files, pattern = paste(c(".csv","Data//"), collapse = "|"), replacement = "")
Markets          <- lapply(Countries, function(x) x[,-c(Qindex(x), TTMindex(x))])
MarketsQuaterly  <- lapply(Countries, function(x) x[,c(1, IndexTicker(x), Qindex(x))])
MarketsTTM       <- lapply(Countries, function(x) x[,c(1, IndexTicker(x), TTMindex(x))])
# Markets (clean)
CutYear <- "13"
MarketsClean         <- lapply(Markets, dfCleanAnually)
MarketsClean         <-  lapply(MarketsClean, function(x) x[,1:which(colnames(x)==CutYear)])
MarketsCleanQuaterly <- lapply(MarketsQuaterly, dfCleanQuaterly)
MarketsCleanTTM      <- lapply(MarketsTTM, dfCleanTTM)
# Quantiles (selected stocks)
qupper <- 0.95
qlower <- 1 - qupper
# Count length of Data (Number of Years)
MarketRelevance <- lapply(MarketsClean, function(x) Relevance(x,unique(x$Ticker)))
# Warren Buffet and the interpretation of financial statements
MarketWBIFS            <- lapply(MarketsClean, function(x) WBIFS(x,unique(x$Ticker)))
MarketWBIFS            <- mapply(function(x, y) left_join(x, y, by = "Ticker", all = T), x = MarketWBIFS, y = MarketRelevance, SIMPLIFY = F)
MarketWBIFS            <- lapply(MarketWBIFS, RankbyRelevance)
QuantileUpperWBIFS     <- lapply(MarketWBIFS, function(x) x[which(x$RankbyRelevance > quantile(x$RankbyRelevance, probs=qupper)),c(1,length(x))])
QuantileLowerWBIFS     <- lapply(MarketWBIFS, function(x) x[which(x$RankbyRelevance < quantile(x$RankbyRelevance, probs=qlower)),c(1,length(x))])
QuantileWBIFS          <- mapply(rbind, QuantileUpperWBIFS, QuantileLowerWBIFS, SIMPLIFY=FALSE)
debugSource('~/Documents/outlier-backend/WBSP.R')
MarketWBSP             <- lapply(MarketsClean, function(x) WBSP(x,unique(x$Ticker)))
PositiveRets[1]
PositiveRets[7]
PositiveRets[1:10]
plot(ConsistentGrowthAhead)
plot(ConsistentGrowthAux)
plot(Escalar(ConsistentGrowthAux))
plot(Escalar(ConsistentGrowthAux))
TotalGrowth[1:10]
plot(EqBondReturnAux)
View(WBSP)
MarketWBSP             <- mapply(function(x, y) left_join(x, y, by = "Ticker", all = T), x = MarketWBSP, y = MarketRelevance, SIMPLIFY = F)
MarketWBSP             <- lapply(MarketWBSP, RankbyRelevance)
QuantileUpperWBSP      <- lapply(MarketWBSP, function(x) x[which(x$RankbyRelevance >= quantile(x$RankbyRelevance, probs=qupper)),c(1,length(x))])
QuantileLowerWBSP      <- lapply(MarketWBSP, function(x) x[which(x$RankbyRelevance <= quantile(x$RankbyRelevance, probs=qlower)),c(1,length(x))])
QuantileWBSP           <- mapply(rbind, QuantileUpperWBSP, QuantileLowerWBSP, SIMPLIFY=FALSE)
View(MarketRelevance)
View(MarketWBSP)
EPS["WSP",]
EPS["WSP.Canada",]
A<-MarketWBSP[[1]]
View(A)
A<-Market[[1]]
A<-MarketS[[1]]
View(A)
A<-Markets[[1]]
View(A)
